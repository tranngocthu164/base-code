# Check https://circleci.com/docs/2.0/ for more details
# for config.yml syntax see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

executors:
  mac:
    macos:
      xcode: "10.1.0"

commands:
  early-stop:
    description: |
      Early halt if this commit is for testing binaries for different platform
      Place this command AFTER checkout command because we need to look
      at the commit subject text
    parameters:
      substring:
        type: string
        description: String to search for in the commit subject to skip build
    steps:
      - run:
          name: Checking OS platform for "<< parameters.substring >>"
          command: |
            subject=$(git show -s --pretty=%s)
            echo "Commit subject: $subject"

            if [[ $subject == *"<< parameters.substring >>"* ]]; then
              echo Skipping testing binary ‚è≠
              echo Found string "<< parameters.substring >>"
              circleci step halt
            fi

jobs:
  mac-test:
    executor: mac

    working_directory: ~/repo

    steps:
      - checkout
      - early-stop:
          substring: Testing new win32
      - early-stop:
          substring: Testing new linux

      # Download and cache dependencies for the app and for tests
      - restore_cache:
          keys:
            - dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-{{ arch }}-{{ .Branch }}-

      - run: npm install
      - run: npm install @cypress/commit-message-install
      - run: npx cypress cache path

      - save_cache:
          paths:
            # local NPM modules
            - node_modules
            # all NPM modules
            - ~/.npm
            # Cypress binary (or yarn dependencies) on Linux
            - ~/Library/Caches/Cypress
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run cypress:version
      - run: $(npm bin)/run-if npm run cypress:run
      - run: $(npm bin)/run-if npm run check-videos

      - run:
          when: on_success
          name: Set status check
          command: $(npm bin)/set-status --state success --description "on CircleCI"
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "on CircleCI"

  linux-test:
    docker:
      # find Docker image at https://github.com/cypress-io/cypress-docker-images
      - image: cypress/base:10

    working_directory: ~/repo

    steps:
      - checkout
      - early-stop:
          substring: Testing new win32

      # Download and cache dependencies for the app and for tests
      - restore_cache:
          keys:
            - dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-{{ arch }}-{{ .Branch }}-

      - run: npm install

      - save_cache:
          paths:
            # local NPM modules
            - node_modules
            # all NPM modules
            - ~/.npm
            # Cypress binary (or yarn dependencies) on Linux
            - ~/.cache
          key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

      - run: npm install @cypress/commit-message-install
      - run: $(npm bin)/commit-message-install --else "npm install cypress"
      - run: $(npm bin)/run-if npm run cypress:version
      - run: $(npm bin)/run-if npm run cypress:run
      - run: $(npm bin)/run-if npm run check-videos

      - run:
          when: on_success
          name: Set status check
          command: $(npm bin)/set-status --state success --description "on CircleCI"
      - run:
          when: on_fail
          name: Set status check
          command: $(npm bin)/set-status --state failure --description "on CircleCI"

workflows:
  version: 2
  tests:
    jobs:
      - linux-test
      - mac-test
